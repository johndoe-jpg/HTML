package pkg4ita_machado_2048;

import java.awt.Point;
import java.awt.event.KeyEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

/**
 *
 * @author THUND
 */
public class W_game extends javax.swing.JFrame implements PropertyChangeListener {
    
    private GameManager gm = new GameManager();
    private W_gameOver go = new W_gameOver();
    private int moves = 0;
    private int x, y;

    /**
     * Creates new form W_game
     */
    public W_game() {
        initComponents();
        go.addPropertyChangeListener(this);
        gm.addPropertyChangeListener(this);
//        setVisible(true);
//        gm.newGame(16, 16);
//        graphics1.board = gm.getBoard();
//        graphics1.repaint();
//        System.out.println(gm);
//        gm.move(Direction.EAST);
//        System.out.println(gm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        graphics1 = new pkg4ita_machado_2048.Graphics();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout graphics1Layout = new javax.swing.GroupLayout(graphics1);
        graphics1.setLayout(graphics1Layout);
        graphics1Layout.setHorizontalGroup(
            graphics1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        graphics1Layout.setVerticalGroup(
            graphics1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(graphics1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(graphics1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_D:
            case KeyEvent.VK_RIGHT:
                gm.move(Direction.EAST);
                moves++;
                break;
            case KeyEvent.VK_W:
            case KeyEvent.VK_UP:
                gm.move(Direction.NORTH);
                moves++;
                break;
            case KeyEvent.VK_A:
            case KeyEvent.VK_LEFT:
                gm.move(Direction.WEST);
                moves++;
                break;
            case KeyEvent.VK_S:
            case KeyEvent.VK_DOWN:
                gm.move(Direction.SOUTH);
                moves++;
                break;
            default:
                throw new AssertionError();
        }
        graphics1.board = gm.getBoard();
        graphics1.repaint();
//        System.out.println(gm);
    }//GEN-LAST:event_formKeyReleased

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private pkg4ita_machado_2048.Graphics graphics1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void propertyChange(PropertyChangeEvent pce) {
        if(pce.getPropertyName().equals("newgame")) {
            setVisible(true);
            moves = 0;
            x = ((Point) pce.getNewValue()).x;
            y = ((Point) pce.getNewValue()).y;
            gm.newGame(x, y);
            graphics1.board = gm.getBoard();
            graphics1.repaint();
        }
        if(pce.getPropertyName().equals("reset")) {
            moves = 0;
            gm.newGame(x, y);
            graphics1.board = gm.getBoard();
            graphics1.repaint();
        }
        if(pce.getPropertyName().equals("over")) {
            go.setText((boolean) pce.getNewValue());
            go.setMoves(moves);
            go.setVisible(true);
        }
        if(pce.getPropertyName().equals("menu")) {
            setVisible(false);
            firePropertyChange("menu", false, true);
        }
    }
}
